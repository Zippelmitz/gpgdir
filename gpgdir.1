.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH GPGDIR 1 "February, 2003" Linux
.SH NAME
.B gpgdir
.SH SYNOPSIS
.B gpgdir [-e
.I directory
.B ] [-d
.I directory
.B ] [-g
.I directory
.B ] [-p
.I pw-file
.B ] [--Exclude
.I pattern
.B ] [--Exclude-from
.I file
.B ] [--Include
.I pattern
.B ] [--Include-from
.I file
.B ] [-K
.I Key-ID
.B ] [-D] [--no-recurse] [--no-delete] [--no-preserve-times] [-t] [-s] [-V] [-v] [-h]
.SH DESCRIPTION
.B gpgdir
is a perl script that uses the CPAN GnuPG::Interface perl module to encrypt and decrypt
directories using a gpg key specified in ~/.gpgdirrc.
.B gpgdir
recursively descends through a directory in order to make sure it encrypts or
decrypts every file in a directory and all of its subdirectories.  By default
the mtime and atime values of all files will be preserved upon encryption and
decryption (this can be disabled with the
.B --no-preserve-times
option).  Note that in
.B --encrypt
mode, gpgdir will delete the original files that
it successfully encrypts (unless the
.B --no-delete
option is given).  However,
upon startup gpgdir first asks for a the decryption password to be sure that a
dummy file can successfully be encrypted and decrypted.  The initial test can
be disabled with the
.B --skip-test
option so that a directory can easily be encrypted without having to also
specify a password (this is consistent with
.B gpg
behavior).  Also, note that gpgdir is careful not encrypt hidden files and
directories.  After all, you probably don't want your ~/.gnupg directory or
~/.bashrc file to be encrypted.

.SH OPTIONS
.TP
.BR \-e ", " \-\^\-encrypt\ \<directory>
Encrypt the directory specified on the command line.
.TP
.BR \-d ", " \-\^\-decrypt\ \<directory>
Decrypt the directory specified on the command line.
.TP
.BR \-g ", " \-\^\-gnupg-dir\ \<directory>
Specify which .gnupg directory will be used to find GnuPG keys.  The default
is ~/.gnupg if this option is not used.  This option allows gpgdir to be
run as one user but use the keys of another user (assuming permissions are
setup correctly, etc.).
.TP
.BR \-p ", " \-\^\-pw-file\ \<pw-file>
Read decryption password from
.B pw-file
instead of typing it on the command line.
.TP
.BR \-t ", " \-\^\-test-mode
Run an encryption and decryption test against a dummy file and exit.  This
test is always run by default in both
.B --encrypt
and
.B --decrypt
mode.
.TP
.BR \-\^\-Exclude\ \<pattern>
Instruct gpgdir to skip all files that match
.B pattern
as a regex match against each filename.  This is similar to the
.B --exclude
option in the standard GNU tar command.
.TP
.BR \-\^\-Exclude-from\ \<file>
Instruct gpgdir to exclude all files matched by patterns listed in
.B file.
This is similar to the
.B --exclude-from
the GNU tar command.
.TP
.BR \-\^\-Include\ \<pattern>
Instruct gpgdir to only include files that match
.B pattern
as a regex match against each filename.
.TP
.BR \-\^\-Include-from\ \<file>
Instruct gpgdir to only include files matched by patterns listed in
.B file.
.TP
.BR \-K ", " \-\^\-Key-id\ \<id>
Manually specify a GnuPG key ID from the command line.  Because GnuPG
supports matching keys with a string,
.B id
does not strictly have to be a key ID; it can be a string that uniquely
matches a key in the GnuPG key ring.
.TP
.BR \-D ", " \-\^\-Default-key
Use the key that GnuPG defines as the default, i.e. the key that is specified
by the
.B default-key
variable in ~/.gnupg/options.  If the default-key variable is not defined
within ~/.gnupg/options, then GnuPG tries to use the first suitable key on
its key ring (the initial encrypt/decrypt test makes sure that the user
knows the corresponding password for the key).
.TP
.BR " \-\^\-skip-test
Skip encryption and decryption test.  This will allow
.B gpgdir
to be used to encrypt a directory without specifying a password (which
normally gets used in encryption mode to test to make sure decryption
against a dummy file works properly).
.TP
.BR \-\^\-no-recurse
Instruct gpgdir to not recurse through any subdirectories of the directory
that is being encrypted or decrypted.
.TP
.BR \-\^\-no-delete
Instruct gpgdir to not delete original files at encrypt time.
.TP
.BR \-\^\-no-preserve times
Instruct gpgdir to not preserve original file mtime and atime values
upon encryption or decryption.
.TP
.BR \-v ", " \-\^\-verbose
Run in verbose mode.
.TP
.BR \-V ", " \-\^\-Version
Print version number and exit.
.TP
.BR \-h ", " \-\^\-help
Print usage information and exit.
.TP
.SH FILES
.B ~/.gpgdirrc
.RS
Contains the key id of the user gpg key that will be used to encrypt
or decrypt the files within a directory.
.RE
.PP
.SH EXAMPLES
The following examples illustrate the command line arguments that could
be supplied to gpgdir in a few situations:
.PP
To encrypt a directory:
.PP
.B $ gpgdir -e ~/testdir
.PP
To encrypt a directory with the default GnuPG key defined in ~/.gnupg/options:
.PP
.B $ gpgdir -e ~/testdir --Default-key
.PP
To decrypt a directory with a key specified in ~/.gpgdirrc:
.PP
.B $ gpgdir -d ~/testdir
.PP
To encrypt a directory but skip all filenames that contain the string "host":
.PP
.B $ gpgdir -e ~/testdir --Exclude host
.PP
To encrypt a directory but only encrypt those files that contain the string "passwd":
.PP
.B $ gpgdir -e ~/testdir --Include passwd
.PP
To encrypt a directory but skip the encryption/decryption test (so you will
not be prompted for a decryption password):
.PP
.B $ gpgdir -e ~/testdir -s
.PP
To encrypt a directory and no subdirectories:
.PP
.B $ gpgdir -e /home/user/testdir --no-recurse
.PP
To encrypt root's home directory, but use the GnuPG keys associated with the user "bob":
.PP
.B # gpgdir -e /root -g /home/bob/.gnupg
.PP
.SH DEPENDENCIES
.B gpgdir
requires that gpg, the Gnu Privacy Guard (http://www.gnupg.org) is installed.
.B gpgdir
also requires the GnuPG::Interface perl module from CPAN, but it is bundled with
.B gpgdir
and is installed in /usr/lib/gpgdir at install-time so it does not pollute the
system perl library tree.

.SH "SEE ALSO"
.BR gpg (1)

.SH AUTHOR
Michael Rash <mbr@cipherdyne.org>

.SH BUGS
Send bug reports to mbr@cipherdyne.org. Suggestions and/or comments are
always welcome as well.

.SH DISTRIBUTION
.B gpgdir
is distributed under the GNU General Public License (GPL), and the latest
version may be downloaded from
.B http://www.cipherdyne.org
